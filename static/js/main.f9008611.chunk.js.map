{"version":3,"sources":["components/Letters.js","components/Home.js","components/LanguageBtn.js","components/App.js","index.js"],"names":["Letters","getRandomInt","min","max","Math","ceil","floor","random","letters","mapLetters","map","letter","index","className","key","style","top","left","animation","animationDelay","toFixed","length","Home","useContext","StateContext","state","useState","animationsDone","setAnimationsDone","useEffect","setTimeout","marks","mapThroughWords","word","transform","visibility","changingLanguage","english","LanguageBtn","setState","onClick","createContext","App","headerAnimationDone","Provider","value","exact","from","to","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9008611.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"../styles/letters.sass\";\r\n\r\nconst Letters = () => {\r\n  function getRandomArbitrary(min, max) {\r\n    return (Math.random() * (max - min) + min).toFixed(1);\r\n  }\r\n  function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  const letters = [\r\n    \"a\",\r\n    \"b\",\r\n    \"c\",\r\n    \"d\",\r\n    \"e\",\r\n    \"f\",\r\n    \"g\",\r\n    \"h\",\r\n    \"o\",\r\n    \"j\",\r\n    \"k\",\r\n    \"l\",\r\n    \"m\",\r\n    \"n\",\r\n    \"o\",\r\n    \"o\",\r\n    \"r\",\r\n    \"s\",\r\n    \"t\",\r\n    \"u\",\r\n    \"v\",\r\n    \"w\",\r\n    \"x\",\r\n    \"y\",\r\n    \"z\",\r\n  ];\r\n  const animations = [\"\", \"-\"];\r\n  const mapLetters = letters.map((letter, index) => {\r\n    return (\r\n      <span\r\n        className=\"letter\"\r\n        key={index}\r\n        style={{\r\n          top: `${getRandomInt(2, 92)}vh`,\r\n          left: `${getRandomInt(2, 92)}vw`,\r\n          animation: `letterMove${getRandomInt(1, 4)} 1s forwards`,\r\n          animationDelay: `${getRandomArbitrary(1.5, 2.5)}s`,\r\n        }}\r\n      >\r\n        {letters[getRandomInt(0, letters.length - 1)]}\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return <>{mapLetters}</>;\r\n};\r\n\r\nexport default Letters;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { StateContext } from \"./App\";\r\nimport Letters from \"./Letters\";\r\nimport \"../styles/home.sass\";\r\n\r\nconst Home = () => {\r\n  const [state, setState] = useContext(StateContext);\r\n  const [animationsDone, setAnimationsDone] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setAnimationsDone(true);\r\n    }, 4000);\r\n  });\r\n  const greeting = [\"H\", \"e\", \"l\", \"l\", \"o,\"];\r\n  const greetingPl = [\"C\", \"z\", \"e\", \"ś\", \"ć,\"];\r\n  const name = [\"I\", \"'\", \"m\", \"-\", \"B\", \"a\", \"r\", \"t\", \"e\", \"k.\"];\r\n  const namePl = [\r\n    \"j\",\r\n    \"e\",\r\n    \"s\",\r\n    \"t\",\r\n    \"e\",\r\n    \"m\",\r\n    \"-\",\r\n    \"B\",\r\n    \"a\",\r\n    \"r\",\r\n    \"t\",\r\n    \"e\",\r\n    \"k.\",\r\n  ];\r\n\r\n  function getRandomArbitrary(min, max) {\r\n    return (Math.random() * (max - min) + min).toFixed(1);\r\n  }\r\n  function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n  const marks = [\"\", \"-\"];\r\n\r\n  const transform = () => {\r\n    return `translate(${getRandomInt(10, 75)}vw, ${\r\n      marks[getRandomInt(0, 1)]\r\n    }${getRandomInt(5, 35)}vh)`;\r\n  };\r\n\r\n  const mapThroughWords = (word) => {\r\n    const header = word.map((letter, index) => {\r\n      return (\r\n        <span\r\n          key={index}\r\n          style={{\r\n            animation: `${\r\n              animationsDone ? \"none\" : \"letterAppear 1s forwards\"\r\n            }`,\r\n            transform: `${animationsDone ? \"none\" : transform()}`,\r\n            animationDelay: `${getRandomArbitrary(1.5, 2.5)}s`,\r\n            visibility: `${letter === \"-\" ? \"hidden\" : \"\"}`,\r\n          }}\r\n        >\r\n          {letter}\r\n        </span>\r\n      );\r\n    });\r\n    return header;\r\n  };\r\n  return (\r\n    <header className=\"header\">\r\n      {!animationsDone && <Letters />}\r\n      <h1\r\n        style={{\r\n          animation: `${state.changingLanguage ? \"changingLanguage 1s\" : \"\"}`,\r\n        }}\r\n      >\r\n        {!state.english\r\n          ? mapThroughWords(greetingPl)\r\n          : mapThroughWords(greeting)}\r\n      </h1>\r\n      <h1\r\n        style={{\r\n          animation: `${state.changingLanguage ? \"changingLanguage 1s\" : \"\"}`,\r\n        }}\r\n      >\r\n        {!state.english ? mapThroughWords(namePl) : mapThroughWords(name)}\r\n      </h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useContext } from \"react\";\r\nimport { StateContext } from \"./App\";\r\nimport \"../styles/languageBtn.sass\";\r\n\r\nconst LanguageBtn = () => {\r\n  const [state, setState] = useContext(StateContext);\r\n  return (\r\n    <button\r\n      className=\"languageBtn\"\r\n      onClick={() => {\r\n        setState((state) => ({\r\n          ...state,\r\n          english: !state.english,\r\n          changingLanguage: true,\r\n        }));\r\n        setTimeout(() => {\r\n          setState((state) => ({ ...state, changingLanguage: false }));\r\n        }, 1000);\r\n      }}\r\n    >\r\n      {state.english ? \"PL\" : \"ENG\"}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LanguageBtn;\r\n","import React, { createContext, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport LanguageBtn from \"./LanguageBtn\";\r\n\r\nexport const StateContext = createContext();\r\nconst App = () => {\r\n  const [state, setState] = useState({\r\n    english: false,\r\n    headerAnimationDone: false,\r\n    changingLanguage: false,\r\n  });\r\n  return (\r\n    <Router>\r\n      <StateContext.Provider value={[state, setState]}>\r\n        <LanguageBtn />\r\n        <Switch>\r\n          <Redirect exact from=\"/\" to=\"/bartoszkrupa\" />\r\n          <Route exact path=\"/bartoszkrupa\" component={Home} />\r\n        </Switch>\r\n      </StateContext.Provider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.sass\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}